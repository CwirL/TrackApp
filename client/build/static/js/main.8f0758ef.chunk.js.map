{"version":3,"sources":["components/navegation/DesktopNav.js","components/navegation/MobileNav.js","components/navegation/NavBar.js","components/common/Map.js","components/real/RealMap.js","components/real/CheckCars.js","components/RealTime.js","components/Test.js","components/common/NotFound.js","App.js","serviceWorker.js","index.js"],"names":["getWidth","window","Responsive","onlyTablet","minWidth","innerWidth","styles","navItem","padding","fontSize","navBrand","margin","DesktopNav","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleItemClick","e","_ref","name","setState","activeItem","state","username","_this$state","react_default","a","createElement","Segment","inverted","Menu","pointing","secondary","Item","as","style","position","active","onClick","Component","navItemToggle","MobileContainer","handleSidebarHide","sidebarOpened","handleToggle","Sidebar","Pushable","maxWidth","onlyMobile","overflow","animation","direction","onHide","visible","Pusher","dimmed","textAlign","vertical","Container","size","Icon","NavBar","navegation_DesktopNav","MobileNav","Map","onScriptLoad","map","google","maps","document","getElementById","id","options","onMapLoad","_this2","s","type","src","x","getElementsByTagName","parentNode","insertBefore","addEventListener","width","height","App","cars","console","log","car","markers","setPosition","records","length","polys","setPath","setVisible","lastPos","common_Map","center","zoom","Marker","Polyline","path","Test","handleChange","ind","Grid","Column","key","plate","Checkbox","checked","onChange","bind","label","color","text","mapContainer","RealTime","getUser","asyncToGenerator","regenerator_default","mark","_callee","reqBody","req","res","data","plates","wrap","_context","prev","next","email","method","body","JSON","stringify","headers","Content-Type","fetch","sent","json","forEach","concat","toConsumableArray","userLoaded","t0","stop","handleChangeCheckCar","getRecords","_callee2","_context2","curPos","i","lat","latitud","lng","longitud","mapLoaded","mess","message","setTimeout","_callee4","_context4","abrupt","_this$state2","navegation_NavBar","stackable","columns","divided","padded","RealMap","NotFound","react_router_dom","to","react_router","component","exact","Boolean","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8f0758ef.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Menu, Responsive, Segment } from \"semantic-ui-react\";\nconst getWidth = () => {\n  const isSSR = typeof window === \"undefined\";\n  return isSSR ? Responsive.onlyTablet.minWidth : window.innerWidth;\n};\n\nconst styles = {\n  navItem: {\n    padding: \"0 20px 5px 20px\",\n    fontSize: \"16px\"\n  },\n  navBrand: {\n    padding: \"0 0 5px 0\",\n    margin: 0,\n    fontSize: \"20px\"\n  }\n};\nclass DesktopNav extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeItem: \"RealTime\",\n      username: \"Wilmer\"\n    };\n  }\n  handleItemClick = (e, { name }) => this.setState({ activeItem: name });\n\n  render() {\n    const { activeItem, username } = this.state;\n    return (\n      <Responsive getWidth={getWidth} minWidth={Responsive.onlyTablet.minWidth}>\n        <Segment inverted>\n          <Menu inverted pointing secondary>\n            <Menu.Item as=\"h3\" style={styles.navBrand}>TrackApp</Menu.Item>\n            <Menu.Menu position=\"right\">\n              <Menu.Item as=\"p\" style={styles.navItem}>\n                Welcome {username}\n              </Menu.Item>\n              <Menu.Item\n                as=\"a\"\n                style={styles.navItem}\n                name=\"RealTime\"\n                active={activeItem === \"RealTime\"}\n                onClick={this.handleItemClick}\n              >\n                RealTime\n              </Menu.Item>\n              <Menu.Item\n                as=\"a\"\n                style={styles.navItem}\n                name=\"Historical\"\n                active={activeItem === \"Historical\"}\n                onClick={this.handleItemClick}\n              >\n                Historical\n              </Menu.Item>\n              <Menu.Item as=\"a\" style={styles.navItem}>\n                Log out\n              </Menu.Item>\n            </Menu.Menu>\n          </Menu>\n        </Segment>\n      </Responsive>\n    );\n  }\n}\nexport default DesktopNav;\n","import PropTypes from \"prop-types\";\nimport React, { Component } from \"react\";\nimport {\n  Container,\n  Icon,\n  Menu,\n  Responsive,\n  Segment,\n  Sidebar\n} from \"semantic-ui-react\";\n\nconst getWidth = () => {\n  const isSSR = typeof window === \"undefined\";\n  return isSSR ? Responsive.onlyTablet.minWidth : window.innerWidth;\n};\nconst styles = {\n  navItem: {\n    padding: \"0 10px 5px 10px\",\n    fontSize: \"16px\"\n  },\n  navItemToggle: {\n    fontSize: \"16px\",\n    padding: \"26px\",\n    margin: \"auto\"\n  },\n  navBrand: {\n    padding: \"0 0 5px 0\",\n    margin: 0,\n    fontSize: \"20px\"\n  }\n};\nclass MobileContainer extends Component {\n  state = {\n    username: \"Wilmer\",\n    activeItem: \"RealTime\"\n  };\n  handleItemClick = (e, { name }) => this.setState({ activeItem: name });\n\n  handleSidebarHide = () => this.setState({ sidebarOpened: false });\n  handleToggle = () => this.setState({ sidebarOpened: true });\n\n  render() {\n    const { sidebarOpened, username, activeItem } = this.state;\n\n    return (\n      <Responsive\n        as={Sidebar.Pushable}\n        getWidth={getWidth}\n        maxWidth={Responsive.onlyMobile.maxWidth}\n        style={{ overflow: \"hidden\" }}\n      >\n        <Sidebar\n          as={Menu}\n          animation=\"overlay\"\n          direction=\"bottom\"\n          inverted\n          onHide={this.handleSidebarHide}\n          visible={sidebarOpened}\n          style={{ overflow: \"hidden\" }}\n        >\n          <Menu.Item\n            as=\"a\"\n            style={styles.navItemToggle}\n            name=\"RealTime\"\n            active={activeItem === \"RealTime\"}\n            onClick={this.handleItemClick}\n          >\n            RealTime\n          </Menu.Item>\n          <Menu.Item\n            as=\"a\"\n            style={styles.navItemToggle}\n            name=\"Historical\"\n            active={activeItem === \"Historical\"}\n            onClick={this.handleItemClick}\n          >\n            Historical\n          </Menu.Item>\n          <Menu.Item\n            as=\"a\"\n            style={styles.navItemToggle}\n            name=\"Historical\"\n            onClick={this.handleItemClick}\n          >\n            Log out\n          </Menu.Item>\n        </Sidebar>\n\n        <Sidebar.Pusher dimmed={sidebarOpened}>\n          <Segment inverted textAlign=\"center\" vertical>\n            <Container>\n              <Menu inverted pointing secondary size=\"large\">\n                <Menu.Item style={styles.navBrand}>TrackApp</Menu.Item>\n                <Menu.Menu position=\"right\">\n                  <Menu.Item as=\"a\" active={false} style={styles.navItem}>\n                    Welcome {username}\n                  </Menu.Item>\n                  <Menu.Item style={styles.navItem} onClick={this.handleToggle}>\n                    <Icon name=\"sidebar\" />\n                  </Menu.Item>\n                </Menu.Menu>\n              </Menu>\n            </Container>\n          </Segment>\n\n        </Sidebar.Pusher>\n      </Responsive>\n    );\n  }\n}\n\nMobileContainer.propTypes = {\n  children: PropTypes.node\n};\n\nexport default MobileContainer;\n","import React from \"react\";\nimport DesktopNav from \"./DesktopNav\";\nimport MobileNav from \"./MobileNav\";\n\nconst NavBar = () => {\n  return (\n    <div>\n      <DesktopNav />\n      <MobileNav />\n    </div>\n  );\n};\nexport default NavBar;\n","import React, { Component } from 'react';\n\nclass Map extends Component {\n  onScriptLoad = () => {\n    const map = new window.google.maps.Map(\n      document.getElementById(this.props.id),\n      this.props.options);\n      \n    this.props.onMapLoad(map)\n  }\n\n  componentDidMount() {\n    if (!window.google) {\n      var s = document.createElement('script');\n      s.type = 'text/javascript';\n      s.src = `https://maps.google.com/maps/api/js?key=AIzaSyDnZHCNVuYH8lZSMZtuHzJ4677eUi6AE8w`;\n      var x = document.getElementsByTagName('script')[0];\n      x.parentNode.insertBefore(s, x);\n      // Below is important. \n      //We cannot access google.maps until it's finished loading\n      s.addEventListener('load', e => {\n        this.onScriptLoad()\n      })\n    } else {\n      this.onScriptLoad()\n    }\n  }\n\n  render() {\n    return (\n      <div style={{ width: \"100%\", height: \"100%\" }} id={this.props.id} />\n    );\n  }\n}\n\nexport default Map","import React, { Component } from \"react\";\nimport Map from \"../common/Map\";\n\nclass App extends Component {\n  componentDidUpdate() {\n    const { cars } = this.props;\n    console.log(cars[0], cars[1]);\n    cars.map((car, id) => {\n      this.markers[id].setPosition(car.records[car.records.length - 1]);\n      this.polys[id].setPath(car.records);\n      if (!car.active) {\n        this.markers[id].setVisible(false);\n        this.polys[id].setVisible(false);\n      } else {\n        this.markers[id].setVisible(true);\n        this.polys[id].setVisible(true);\n      }\n    });\n  }\n\n  render() {\n    const { cars } = this.props;\n    let lastPos = cars[1].records[cars[1].records.length - 1];\n    return (\n      <Map\n        id=\"myMap\"\n        options={{\n          center: lastPos,\n          zoom: 15\n        }}\n        onMapLoad={map => {\n          this.markers = cars.map(car => {\n            return new window.google.maps.Marker({\n              position: car.records[car.records.length - 1],\n              map: map\n            });\n          });\n          this.polys = cars.map(car => {\n            return new window.google.maps.Polyline({\n              path: car.records,\n              map: map\n            });\n          });\n        }}\n      />\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport { Checkbox, Grid } from \"semantic-ui-react\";\n\nexport default function Test(props) {\n    const {cars, handleChange} = props;\n    return cars.map((car, ind) => {\n      return (\n        <Grid.Column key={car.plate} width={12}>\n          <Checkbox\n            checked={car.active}\n            onChange={handleChange.bind(this, ind)}\n            label={<label style={{ color: \"white\" }}>{car.plate}</label>}\n          />\n        </Grid.Column>\n      );\n    });\n}\n","import React, { Component } from \"react\";\nimport NavBar from \"./navegation/NavBar\";\nimport RealMap from \"./real/RealMap\";\nimport CheckCars from \"./real/CheckCars\";\nimport { Grid, Segment } from \"semantic-ui-react\";\nconst styles = {\n  text: {\n    color: \"white\"\n  },\n  mapContainer: {\n    height: \"500px\",\n    padding: \"0\",\n    margin: \"0\"\n  }\n};\n\nexport default class RealTime extends Component {\n  constructor() {\n    super();\n    this.state = {\n      path: [],\n      mess: \"Loading\",\n      cars: [],\n      plates: [],\n      records: [],\n      userLoaded: false,\n      mapLoaded: false\n    };\n  }\n  async componentDidMount() {\n    await this.getUser();\n    await this.getRecords();\n  }\n  componentDidUpdate() {\n    if (this.state.mapLoaded) {\n      console.log(\"update after map loaded\");\n      setTimeout(async () => await this.getRecords(), 2000);\n    }\n  }\n  getUser = async () => {\n    const reqBody = { email: \"will.canti2697@gmail.com\" };\n    const req = {\n      method: \"POST\",\n      body: JSON.stringify(reqBody),\n      headers: { \"Content-Type\": \"application/json\" }\n    };\n    try {\n      let res = await fetch(\"http://192.168.1.8:5000/track/api/getUser\", req);\n      let data = await res.json();\n      let cars = [];\n      let plates = [];\n      data.cars.forEach(car => {\n        cars = [...cars, { plate: car.plate, active: true, records: [] }];\n        plates = [...plates, car.plate];\n      });\n      this.setState({\n        plates,\n        cars,\n        userLoaded: true\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  handleChangeCheckCar = (ind, e) => {\n    let cars = this.state.cars;\n    cars[ind].active = !cars[ind].active;\n    // console.table(cars);\n    this.setState({ cars });\n  };\n\n  getRecords = async () => {\n    const { cars, plates } = this.state;\n    const reqBody = { email: \"will.canti2697@gmail.com\", plates: plates };\n    const req = {\n      method: \"POST\",\n      body: JSON.stringify(reqBody),\n      headers: { \"Content-Type\": \"application/json\" }\n    };\n    try {\n      const res = await fetch(\n        \"http://192.168.1.8:5000/track/api/lastPosArr\",\n        req\n      );\n      const curPosArr = await res.json();\n      curPosArr.map((curPos, i) => {\n        cars[i].records = [\n          ...cars[i].records,\n          { lat: curPos.latitud, lng: curPos.longitud }\n        ];\n      });\n      this.setState({ cars, mapLoaded: true });\n    } catch (error) {\n      this.setState({ mess: \"Was not able to connect to the dataBase\" });\n      console.log(error.message);\n    }\n  };\n\n  render() {\n    console.log(\"render\");\n    const { mapLoaded, mess, cars, userLoaded } = this.state;\n    return (\n      <div>\n        <NavBar />\n        <Grid stackable columns={2} divided padded inverted>\n          <Grid.Column width={4}>\n            <Segment color=\"black\" inverted>\n              {userLoaded ? (\n                <CheckCars\n                  cars={cars}\n                  handleChange={this.handleChangeCheckCar}\n                />\n              ) : (\n                <div>Loading</div>\n              )}\n            </Segment>\n          </Grid.Column>\n          <Grid.Column width={12}>\n            {mapLoaded ? (\n              <Segment color=\"black\" inverted style={styles.mapContainer}>\n                <RealMap cars={cars} />\n              </Segment>\n            ) : (\n              <div style={styles.text}>{mess}</div>\n            )}\n          </Grid.Column>\n        </Grid>\n      </div>\n    );\n  }\n}\n","import React from 'react'\n\nexport default function Test() {\n  return (\n    <div>\n      Test\n    </div>\n  )\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst NotFound = () => {\n  return (\n    <div>\n      <h1>Not Found</h1>\n      <Link to=\"/\">Go to Homepage</Link>\n    </div>\n  );\n};\n\nexport default NotFound;\n","import React from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport RealTime from \"./components/RealTime\";\nimport Test from \"./components/Test\";\nimport NotFound from \"./components/common/NotFound\";\nimport \"./App.css\";\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div>\n        <Switch>\n          <Route path=\"/\" component={RealTime} exact />\n          <Route path=\"/test\" component={Test} exact />\n          <Route component={NotFound} />\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}