{"ast":null,"code":"var _jsxFileName = \"/home/wilmer/Escritorio/trackApp/client/src/components/real/RealMap.js\";\nimport React, { Component } from \"react\";\nimport Map from \"../common/Map\";\n\nclass App extends Component {\n  componentDidUpdate() {\n    const cars = this.props.cars;\n    console.log(cars[0], cars[1]);\n    cars.map((car, id) => {\n      this.markers[id].setPosition(car.records[car.records.length - 1]);\n      this.polys[id].setPath(car.records);\n\n      if (!car.active) {\n        this.markers[id].setVisible(false);\n        this.polys[id].setVisible(false);\n      } else {\n        this.markers[id].setVisible(true);\n        this.polys[id].setVisible(true);\n      }\n    });\n  }\n\n  render() {\n    const cars = this.props.cars;\n    let lastPos = cars[1].records[cars[1].records.length - 1];\n    return React.createElement(Map, {\n      id: \"myMap\",\n      options: {\n        center: lastPos,\n        zoom: 15\n      },\n      onMapLoad: map => {\n        this.markers = cars.map(car => {\n          return new window.google.maps.Marker({\n            position: car.records[car.records.length - 1],\n            icon: 'https://raw.githubusercontent.com/CwirL/trackApp/master/client/public/fourwheeler.png',\n            map: map\n          });\n        });\n        this.polys = cars.map(car => {\n          return new window.google.maps.Polyline({\n            path: car.records,\n            map: map\n          });\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/wilmer/Escritorio/trackApp/client/src/components/real/RealMap.js"],"names":["React","Component","Map","App","componentDidUpdate","cars","props","console","log","map","car","id","markers","setPosition","records","length","polys","setPath","active","setVisible","render","lastPos","center","zoom","window","google","maps","Marker","position","icon","Polyline","path"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,GAAP,MAAgB,eAAhB;;AAEA,MAAMC,GAAN,SAAkBF,SAAlB,CAA4B;AAC1BG,EAAAA,kBAAkB,GAAG;AAAA,UACXC,IADW,GACF,KAAKC,KADH,CACXD,IADW;AAEnBE,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAI,CAAC,CAAD,CAAhB,EAAqBA,IAAI,CAAC,CAAD,CAAzB;AACAA,IAAAA,IAAI,CAACI,GAAL,CAAS,CAACC,GAAD,EAAMC,EAAN,KAAa;AACpB,WAAKC,OAAL,CAAaD,EAAb,EAAiBE,WAAjB,CAA6BH,GAAG,CAACI,OAAJ,CAAYJ,GAAG,CAACI,OAAJ,CAAYC,MAAZ,GAAqB,CAAjC,CAA7B;AACA,WAAKC,KAAL,CAAWL,EAAX,EAAeM,OAAf,CAAuBP,GAAG,CAACI,OAA3B;;AACA,UAAI,CAACJ,GAAG,CAACQ,MAAT,EAAiB;AACf,aAAKN,OAAL,CAAaD,EAAb,EAAiBQ,UAAjB,CAA4B,KAA5B;AACA,aAAKH,KAAL,CAAWL,EAAX,EAAeQ,UAAf,CAA0B,KAA1B;AACD,OAHD,MAGO;AACL,aAAKP,OAAL,CAAaD,EAAb,EAAiBQ,UAAjB,CAA4B,IAA5B;AACA,aAAKH,KAAL,CAAWL,EAAX,EAAeQ,UAAf,CAA0B,IAA1B;AACD;AACF,KAVD;AAWD;;AAEDC,EAAAA,MAAM,GAAG;AAAA,UACCf,IADD,GACU,KAAKC,KADf,CACCD,IADD;AAEP,QAAIgB,OAAO,GAAGhB,IAAI,CAAC,CAAD,CAAJ,CAAQS,OAAR,CAAgBT,IAAI,CAAC,CAAD,CAAJ,CAAQS,OAAR,CAAgBC,MAAhB,GAAyB,CAAzC,CAAd;AACA,WACE,oBAAC,GAAD;AACE,MAAA,EAAE,EAAC,OADL;AAEE,MAAA,OAAO,EAAE;AACPO,QAAAA,MAAM,EAAED,OADD;AAEPE,QAAAA,IAAI,EAAE;AAFC,OAFX;AAME,MAAA,SAAS,EAAEd,GAAG,IAAI;AAChB,aAAKG,OAAL,GAAeP,IAAI,CAACI,GAAL,CAASC,GAAG,IAAI;AAC7B,iBAAO,IAAIc,MAAM,CAACC,MAAP,CAAcC,IAAd,CAAmBC,MAAvB,CAA8B;AACnCC,YAAAA,QAAQ,EAAElB,GAAG,CAACI,OAAJ,CAAYJ,GAAG,CAACI,OAAJ,CAAYC,MAAZ,GAAqB,CAAjC,CADyB;AAEnCc,YAAAA,IAAI,EAAE,uFAF6B;AAGnCpB,YAAAA,GAAG,EAAEA;AAH8B,WAA9B,CAAP;AAKD,SANc,CAAf;AAOA,aAAKO,KAAL,GAAaX,IAAI,CAACI,GAAL,CAASC,GAAG,IAAI;AAC3B,iBAAO,IAAIc,MAAM,CAACC,MAAP,CAAcC,IAAd,CAAmBI,QAAvB,CAAgC;AACrCC,YAAAA,IAAI,EAAErB,GAAG,CAACI,OAD2B;AAErCL,YAAAA,GAAG,EAAEA;AAFgC,WAAhC,CAAP;AAID,SALY,CAAb;AAMD,OApBH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAwBD;;AA5CyB;;AA+C5B,eAAeN,GAAf","sourcesContent":["import React, { Component } from \"react\";\nimport Map from \"../common/Map\";\n\nclass App extends Component {\n  componentDidUpdate() {\n    const { cars } = this.props;\n    console.log(cars[0], cars[1]);\n    cars.map((car, id) => {\n      this.markers[id].setPosition(car.records[car.records.length - 1]);\n      this.polys[id].setPath(car.records);\n      if (!car.active) {\n        this.markers[id].setVisible(false);\n        this.polys[id].setVisible(false);\n      } else {\n        this.markers[id].setVisible(true);\n        this.polys[id].setVisible(true);\n      }\n    });\n  }\n\n  render() {\n    const { cars } = this.props;\n    let lastPos = cars[1].records[cars[1].records.length - 1];\n    return (\n      <Map\n        id=\"myMap\"\n        options={{\n          center: lastPos,\n          zoom: 15\n        }}\n        onMapLoad={map => {\n          this.markers = cars.map(car => {\n            return new window.google.maps.Marker({\n              position: car.records[car.records.length - 1],\n              icon: 'https://raw.githubusercontent.com/CwirL/trackApp/master/client/public/fourwheeler.png',\n              map: map\n            });\n          });\n          this.polys = cars.map(car => {\n            return new window.google.maps.Polyline({\n              path: car.records,\n              map: map\n            });\n          });\n        }}\n      />\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}