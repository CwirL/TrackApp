{"ast":null,"code":"var _jsxFileName = \"/home/wilmer/Escritorio/trackApp/client/src/components/navegation/MobileNav.js\";\nimport PropTypes from \"prop-types\";\nimport React, { Component } from \"react\";\nimport { Container, Icon, Menu, Responsive, Segment, Sidebar, Grid } from \"semantic-ui-react\";\n\nconst getWidth = () => {\n  const isSSR = typeof window === \"undefined\";\n  console.log(window.innerWidth);\n  return isSSR ? Responsive.onlyTablet.minWidth : window.innerWidth;\n};\n\nclass MobileContainer extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {};\n\n    this.handleItemClick = () => {};\n\n    this.handleSidebarHide = () => this.setState({\n      sidebarOpened: false\n    });\n\n    this.handleToggle = () => this.setState({\n      sidebarOpened: true\n    });\n  }\n\n  render() {\n    const _this$props = this.props,\n          children = _this$props.children,\n          activeItem = _this$props.activeItem;\n    const sidebarOpened = this.state.sidebarOpened;\n    return React.createElement(Responsive, {\n      as: Sidebar.Pushable,\n      getWidth: getWidth,\n      maxWidth: Responsive.onlyMobile.maxWidth,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(Sidebar, {\n      as: Menu,\n      animation: \"overlay\",\n      direction: \"top\",\n      inverted: true,\n      onHide: this.handleSidebarHide,\n      horizontal: true,\n      visible: sidebarOpened,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(Menu.Item, {\n      as: \"a\",\n      name: \"RealTime\",\n      onClick: this.handleItemClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \"RealTime\"), React.createElement(Menu.Item, {\n      as: \"a\",\n      style: {\n        fontSize: 10\n      },\n      name: \"Historical\",\n      onClick: this.handleItemClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"Historical\")), React.createElement(Sidebar.Pusher, {\n      dimmed: sidebarOpened,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(Segment, {\n      inverted: true,\n      textAlign: \"center\",\n      vertical: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(Menu, {\n      inverted: true,\n      pointing: true,\n      secondary: true,\n      size: \"large\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(Menu.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"TrackApp\"), React.createElement(Menu.Item, {\n      position: \"right\",\n      onClick: this.handleToggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"sidebar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }))))), children));\n  }\n\n}\n\nMobileContainer.propTypes = {\n  children: PropTypes.node\n};\nexport default MobileContainer;","map":{"version":3,"sources":["/home/wilmer/Escritorio/trackApp/client/src/components/navegation/MobileNav.js"],"names":["PropTypes","React","Component","Container","Icon","Menu","Responsive","Segment","Sidebar","Grid","getWidth","isSSR","window","console","log","innerWidth","onlyTablet","minWidth","MobileContainer","state","handleItemClick","handleSidebarHide","setState","sidebarOpened","handleToggle","render","props","children","activeItem","Pushable","onlyMobile","maxWidth","fontSize","propTypes","node"],"mappings":"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","sourcesContent":["import PropTypes from \"prop-types\";\nimport React, { Component } from \"react\";\nimport {\n  Container,\n  Icon,\n  Menu,\n  Responsive,\n  Segment,\n  Sidebar,\n  Grid\n} from \"semantic-ui-react\";\n\nconst getWidth = () => {\n  const isSSR = typeof window === \"undefined\";\n  console.log(window.innerWidth);\n  return isSSR ? Responsive.onlyTablet.minWidth : window.innerWidth;\n};\n\nclass MobileContainer extends Component {\n  state = {};\n  handleItemClick = () => {};\n  handleSidebarHide = () => this.setState({ sidebarOpened: false });\n  handleToggle = () => this.setState({ sidebarOpened: true });\n\n  render() {\n    const { children, activeItem } = this.props;\n    const { sidebarOpened } = this.state;\n\n    return (\n      <Responsive\n        as={Sidebar.Pushable}\n        getWidth={getWidth}\n        maxWidth={Responsive.onlyMobile.maxWidth}\n      >\n        <Sidebar\n          as={Menu}\n          animation=\"overlay\"\n          direction=\"top\"\n          inverted\n          onHide={this.handleSidebarHide}\n          horizontal\n          visible={sidebarOpened}\n        >\n          <Menu.Item as=\"a\" name=\"RealTime\" onClick={this.handleItemClick}>\n            RealTime\n          </Menu.Item>\n          <Menu.Item as=\"a\" style={{fontSize : 10}} name=\"Historical\" onClick={this.handleItemClick}>\n            Historical\n          </Menu.Item>\n        </Sidebar>\n\n        <Sidebar.Pusher dimmed={sidebarOpened}>\n          <Segment inverted textAlign=\"center\" vertical>\n            <Container>\n              <Menu inverted pointing secondary size=\"large\">\n                <Menu.Item>TrackApp</Menu.Item>\n\n                <Menu.Item position=\"right\" onClick={this.handleToggle}>\n                  <Icon name=\"sidebar\" />\n                </Menu.Item>\n              </Menu>\n            </Container>\n          </Segment>\n\n          {children}\n        </Sidebar.Pusher>\n      </Responsive>\n    );\n  }\n}\n\nMobileContainer.propTypes = {\n  children: PropTypes.node\n};\n\nexport default MobileContainer;\n"]},"metadata":{},"sourceType":"module"}