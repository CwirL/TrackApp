{"ast":null,"code":"var _jsxFileName = \"/home/wilmer/Escritorio/trackApp/client/src/components/real/RealMap.js\";\nimport React, { Component } from \"react\";\nconst styles = [{\n  elementType: \"geometry\",\n  stylers: [{\n    color: \"#242f3e\"\n  }]\n}, {\n  elementType: \"labels.text.stroke\",\n  stylers: [{\n    color: \"#242f3e\"\n  }]\n}, {\n  elementType: \"labels.text.fill\",\n  stylers: [{\n    color: \"#746855\"\n  }]\n}, {\n  featureType: \"administrative.locality\",\n  elementType: \"labels.text.fill\",\n  stylers: [{\n    color: \"#d59563\"\n  }]\n}, {\n  featureType: \"poi\",\n  elementType: \"labels.text.fill\",\n  stylers: [{\n    color: \"#d59563\"\n  }]\n}, {\n  featureType: \"poi.park\",\n  elementType: \"geometry\",\n  stylers: [{\n    color: \"#263c3f\"\n  }]\n}, {\n  featureType: \"poi.park\",\n  elementType: \"labels.text.fill\",\n  stylers: [{\n    color: \"#6b9a76\"\n  }]\n}, {\n  featureType: \"road\",\n  elementType: \"geometry\",\n  stylers: [{\n    color: \"#38414e\"\n  }]\n}, {\n  featureType: \"road\",\n  elementType: \"geometry.stroke\",\n  stylers: [{\n    color: \"#212a37\"\n  }]\n}, {\n  featureType: \"road\",\n  elementType: \"labels.text.fill\",\n  stylers: [{\n    color: \"#9ca5b3\"\n  }]\n}, {\n  featureType: \"road.highway\",\n  elementType: \"geometry\",\n  stylers: [{\n    color: \"#746855\"\n  }]\n}, {\n  featureType: \"road.highway\",\n  elementType: \"geometry.stroke\",\n  stylers: [{\n    color: \"#1f2835\"\n  }]\n}, {\n  featureType: \"road.highway\",\n  elementType: \"labels.text.fill\",\n  stylers: [{\n    color: \"#f3d19c\"\n  }]\n}, {\n  featureType: \"transit\",\n  elementType: \"geometry\",\n  stylers: [{\n    color: \"#2f3948\"\n  }]\n}, {\n  featureType: \"transit.station\",\n  elementType: \"labels.text.fill\",\n  stylers: [{\n    color: \"#d59563\"\n  }]\n}, {\n  featureType: \"water\",\n  elementType: \"geometry\",\n  stylers: [{\n    color: \"#17263c\"\n  }]\n}, {\n  featureType: \"water\",\n  elementType: \"labels.text.fill\",\n  stylers: [{\n    color: \"#515c6d\"\n  }]\n}, {\n  featureType: \"water\",\n  elementType: \"labels.text.stroke\",\n  stylers: [{\n    color: \"#17263c\"\n  }]\n}];\nconst icons = [\"https://raw.githubusercontent.com/CwirL/trackApp/master/client/src/assets/images/icons/truck_1.png?token=ALUUV7OAFCUYOGZUIW4LGK25EL3WC\", \"https://raw.githubusercontent.com/CwirL/trackApp/master/client/src/assets/images/icons/truck_2.png?token=ALUUV7NOGEXL4IVKQL46TRK5EL3WS\", \"https://raw.githubusercontent.com/CwirL/trackApp/master/client/src/assets/images/icons/truck_3.png?token=ALUUV7MXBEF5CTR6B6XS7XS5EL3XI\", \"https://raw.githubusercontent.com/CwirL/trackApp/master/client/src/assets/images/icons/truck_4.png?token=ALUUV7ON72CGBMWDTTD6Y2K5EL3YC\", \"https://raw.githubusercontent.com/CwirL/trackApp/master/client/src/assets/images/icons/truck_5.png?token=ALUUV7PIIFFMX3PYYJCZO3S5EL3ZI\", \"https://raw.githubusercontent.com/CwirL/trackApp/master/client/src/assets/images/icons/truck_6.png?token=ALUUV7KK7WJVC34WRDE7STS5EL3ZU\", \"https://raw.githubusercontent.com/CwirL/trackApp/master/client/src/assets/images/icons/truck_7.png?token=ALUUV7NPXV24NSEV6BMH26S5EL32K\", \"https://raw.githubusercontent.com/CwirL/trackApp/master/client/src/assets/images/icons/truck_8.png?token=ALUUV7MWXH2VZ3UR3ZWDJAC5EL322\", \"https://raw.githubusercontent.com/CwirL/trackApp/master/client/src/assets/images/icons/truck_9.png?token=ALUUV7L4JL6NWY6AKUVZ2UC5EL33U\", \"https://raw.githubusercontent.com/CwirL/trackApp/master/client/src/assets/images/icons/truck_10.png?token=ALUUV7PFM7ABXP5IT3M65EK5EL34K\"];\nconst colors = [\"#EF9A9A\", \"#9575CD\", \"#7986CB\", \"#64B5F6\", \"#81C784\", \"#FFF176\", \"#FFB74D\", \"#E0E0E0\", \"#A1887F\", \"#BA68C8\"];\n\nclass App extends Component {\n  componentDidMount() {\n    const cars = this.props.cars;\n    let lastPos = cars[1].records[cars[1].records.length - 1];\n    this.map = new window.google.maps.Map(document.getElementById(\"map\"), {\n      center: lastPos,\n      styles: styles,\n      zoom: 16\n    });\n    console.log(this.props.btnBounds.current);\n    this.map.controls[window.google.maps.ControlPosition.BOTTOM_LEFT].push(this.props.btnBounds.current);\n    this.markers = cars.map((car, id) => {\n      return new window.google.maps.Marker({\n        position: car.records[car.records.length - 1],\n        clickable: true,\n        icon: icons[id % 10],\n        map: this.map\n      });\n    });\n    this.markers.forEach((marker, id) => {\n      let infoWindow = new window.google.maps.InfoWindow();\n      let contentString = \"<label style=\\\"color: black; background: white\\\">\".concat(cars[id].plate, \"</label>\");\n      infoWindow.setContent(contentString);\n      marker.addListener(\"click\", function () {\n        infoWindow.open(this.map, marker);\n        console.log(infoWindow);\n      });\n    });\n    this.polys = cars.map((car, id) => {\n      return new window.google.maps.Polyline({\n        path: car.records,\n        strokeColor: colors[id % 10],\n        map: this.map\n      });\n    });\n  }\n\n  componentDidUpdate() {\n    const cars = this.props.cars;\n    let bounds = new window.google.maps.LatLngBounds();\n    cars.map((car, id) => {\n      let marker = this.markers[id];\n      let poly = this.polys[id];\n      marker.setPosition(car.records[car.records.length - 1]);\n      poly.setPath(car.records);\n\n      if (!car.active) {\n        marker.setVisible(false);\n        poly.setVisible(false);\n      } else {\n        marker.setVisible(true);\n        poly.setVisible(true);\n      }\n\n      if (marker.getVisible() && poly.getVisible()) {\n        poly.getPath().forEach(el => {\n          bounds.extend(el);\n        });\n      }\n    });\n\n    if (this.props.bounds) {\n      this.map.fitBounds(bounds);\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      style: {\n        width: \"100%\",\n        height: \"100%\"\n      },\n      id: \"map\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/wilmer/Escritorio/trackApp/client/src/components/real/RealMap.js"],"names":["React","Component","styles","elementType","stylers","color","featureType","icons","colors","App","componentDidMount","cars","props","lastPos","records","length","map","window","google","maps","Map","document","getElementById","center","zoom","console","log","btnBounds","current","controls","ControlPosition","BOTTOM_LEFT","push","markers","car","id","Marker","position","clickable","icon","forEach","marker","infoWindow","InfoWindow","contentString","plate","setContent","addListener","open","polys","Polyline","path","strokeColor","componentDidUpdate","bounds","LatLngBounds","poly","setPosition","setPath","active","setVisible","getVisible","getPath","el","extend","fitBounds","render","width","height"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n\nconst styles = [\n  { elementType: \"geometry\", stylers: [{ color: \"#242f3e\" }] },\n  { elementType: \"labels.text.stroke\", stylers: [{ color: \"#242f3e\" }] },\n  { elementType: \"labels.text.fill\", stylers: [{ color: \"#746855\" }] },\n  {\n    featureType: \"administrative.locality\",\n    elementType: \"labels.text.fill\",\n    stylers: [{ color: \"#d59563\" }]\n  },\n  {\n    featureType: \"poi\",\n    elementType: \"labels.text.fill\",\n    stylers: [{ color: \"#d59563\" }]\n  },\n  {\n    featureType: \"poi.park\",\n    elementType: \"geometry\",\n    stylers: [{ color: \"#263c3f\" }]\n  },\n  {\n    featureType: \"poi.park\",\n    elementType: \"labels.text.fill\",\n    stylers: [{ color: \"#6b9a76\" }]\n  },\n  {\n    featureType: \"road\",\n    elementType: \"geometry\",\n    stylers: [{ color: \"#38414e\" }]\n  },\n  {\n    featureType: \"road\",\n    elementType: \"geometry.stroke\",\n    stylers: [{ color: \"#212a37\" }]\n  },\n  {\n    featureType: \"road\",\n    elementType: \"labels.text.fill\",\n    stylers: [{ color: \"#9ca5b3\" }]\n  },\n  {\n    featureType: \"road.highway\",\n    elementType: \"geometry\",\n    stylers: [{ color: \"#746855\" }]\n  },\n  {\n    featureType: \"road.highway\",\n    elementType: \"geometry.stroke\",\n    stylers: [{ color: \"#1f2835\" }]\n  },\n  {\n    featureType: \"road.highway\",\n    elementType: \"labels.text.fill\",\n    stylers: [{ color: \"#f3d19c\" }]\n  },\n  {\n    featureType: \"transit\",\n    elementType: \"geometry\",\n    stylers: [{ color: \"#2f3948\" }]\n  },\n  {\n    featureType: \"transit.station\",\n    elementType: \"labels.text.fill\",\n    stylers: [{ color: \"#d59563\" }]\n  },\n  {\n    featureType: \"water\",\n    elementType: \"geometry\",\n    stylers: [{ color: \"#17263c\" }]\n  },\n  {\n    featureType: \"water\",\n    elementType: \"labels.text.fill\",\n    stylers: [{ color: \"#515c6d\" }]\n  },\n  {\n    featureType: \"water\",\n    elementType: \"labels.text.stroke\",\n    stylers: [{ color: \"#17263c\" }]\n  }\n];\n\nconst icons = [\n  \"https://raw.githubusercontent.com/CwirL/trackApp/master/client/src/assets/images/icons/truck_1.png?token=ALUUV7OAFCUYOGZUIW4LGK25EL3WC\",\n  \"https://raw.githubusercontent.com/CwirL/trackApp/master/client/src/assets/images/icons/truck_2.png?token=ALUUV7NOGEXL4IVKQL46TRK5EL3WS\",\n  \"https://raw.githubusercontent.com/CwirL/trackApp/master/client/src/assets/images/icons/truck_3.png?token=ALUUV7MXBEF5CTR6B6XS7XS5EL3XI\",\n  \"https://raw.githubusercontent.com/CwirL/trackApp/master/client/src/assets/images/icons/truck_4.png?token=ALUUV7ON72CGBMWDTTD6Y2K5EL3YC\",\n  \"https://raw.githubusercontent.com/CwirL/trackApp/master/client/src/assets/images/icons/truck_5.png?token=ALUUV7PIIFFMX3PYYJCZO3S5EL3ZI\",\n  \"https://raw.githubusercontent.com/CwirL/trackApp/master/client/src/assets/images/icons/truck_6.png?token=ALUUV7KK7WJVC34WRDE7STS5EL3ZU\",\n  \"https://raw.githubusercontent.com/CwirL/trackApp/master/client/src/assets/images/icons/truck_7.png?token=ALUUV7NPXV24NSEV6BMH26S5EL32K\",\n  \"https://raw.githubusercontent.com/CwirL/trackApp/master/client/src/assets/images/icons/truck_8.png?token=ALUUV7MWXH2VZ3UR3ZWDJAC5EL322\",\n  \"https://raw.githubusercontent.com/CwirL/trackApp/master/client/src/assets/images/icons/truck_9.png?token=ALUUV7L4JL6NWY6AKUVZ2UC5EL33U\",\n  \"https://raw.githubusercontent.com/CwirL/trackApp/master/client/src/assets/images/icons/truck_10.png?token=ALUUV7PFM7ABXP5IT3M65EK5EL34K\"\n];\nconst colors = [\n  \"#EF9A9A\",\n  \"#9575CD\",\n  \"#7986CB\",\n  \"#64B5F6\",\n  \"#81C784\",\n  \"#FFF176\",\n  \"#FFB74D\",\n  \"#E0E0E0\",\n  \"#A1887F\",\n  \"#BA68C8\"\n];\n\nclass App extends Component {\n  componentDidMount() {\n    const { cars } = this.props;\n    let lastPos = cars[1].records[cars[1].records.length - 1];\n    this.map = new window.google.maps.Map(document.getElementById(\"map\"), {\n      center: lastPos,\n      styles: styles,\n      zoom: 16\n    });\n    console.log(this.props.btnBounds.current);\n    this.map.controls[window.google.maps.ControlPosition.BOTTOM_LEFT].push(\n      this.props.btnBounds.current\n    );\n    this.markers = cars.map((car, id) => {\n      return new window.google.maps.Marker({\n        position: car.records[car.records.length - 1],\n        clickable: true,\n        icon: icons[id%10],\n        map: this.map\n      });\n    });\n    this.markers.forEach((marker, id) => {\n      let infoWindow = new window.google.maps.InfoWindow();\n      let contentString = `<label style=\"color: black; background: white\">${\n        cars[id].plate\n      }</label>`;\n      infoWindow.setContent(contentString);\n      marker.addListener(\"click\", function() {\n        infoWindow.open(this.map, marker);\n        console.log(infoWindow);\n      });\n    });\n    this.polys = cars.map((car, id) => {\n      return new window.google.maps.Polyline({\n        path: car.records,\n        strokeColor: colors[id%10],\n        map: this.map\n      });\n    });\n  }\n  componentDidUpdate() {\n    const { cars } = this.props;\n    let bounds = new window.google.maps.LatLngBounds();\n    cars.map((car, id) => {\n      let marker = this.markers[id];\n      let poly = this.polys[id];\n      marker.setPosition(car.records[car.records.length - 1]);\n      poly.setPath(car.records);\n      if (!car.active) {\n        marker.setVisible(false);\n        poly.setVisible(false);\n      } else {\n        marker.setVisible(true);\n        poly.setVisible(true);\n      }\n      if (marker.getVisible() && poly.getVisible()) {\n        poly.getPath().forEach(el => {\n          bounds.extend(el);\n        });\n      }\n    });\n    if (this.props.bounds) {\n      this.map.fitBounds(bounds);\n    }\n  }\n\n  render() {\n    return <div style={{ width: \"100%\", height: \"100%\" }} id={\"map\"} />;\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}