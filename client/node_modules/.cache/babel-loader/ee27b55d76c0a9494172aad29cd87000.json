{"ast":null,"code":"var _jsxFileName = \"/home/wilmer/Escritorio/trackApp/client/src/components/Test.js\";\nimport React from 'react';\nimport { Grid, Segment } from 'semantic-ui-react';\n\nconst GridExampleInverted = () => React.createElement(Grid, {\n  columns: \"equal\",\n  divided: true,\n  inverted: true,\n  padded: true,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 5\n  },\n  __self: this\n}, React.createElement(Grid.Row, {\n  color: \"black\",\n  textAlign: \"center\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 6\n  },\n  __self: this\n}, React.createElement(Grid.Column, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 7\n  },\n  __self: this\n}, React.createElement(Segment, {\n  color: \"black\",\n  inverted: true,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 8\n  },\n  __self: this\n}, \"1\")), React.createElement(Grid.Column, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12\n  },\n  __self: this\n}, React.createElement(Segment, {\n  color: \"black\",\n  inverted: true,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13\n  },\n  __self: this\n}, \"2\")), React.createElement(Grid.Column, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17\n  },\n  __self: this\n}, React.createElement(Segment, {\n  color: \"black\",\n  inverted: true,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18\n  },\n  __self: this\n}, \"3\"))));\n\nexport default GridExampleInverted;","map":{"version":3,"sources":["/home/wilmer/Escritorio/trackApp/client/src/components/Test.js"],"names":["React","Grid","Segment","GridExampleInverted"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,OAAf,QAA8B,mBAA9B;;AAEA,MAAMC,mBAAmB,GAAG,MAC1B,oBAAC,IAAD;AAAM,EAAA,OAAO,EAAC,OAAd;AAAsB,EAAA,OAAO,MAA7B;AAA8B,EAAA,QAAQ,MAAtC;AAAuC,EAAA,MAAM,MAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,oBAAC,IAAD,CAAM,GAAN;AAAU,EAAA,KAAK,EAAC,OAAhB;AAAwB,EAAA,SAAS,EAAC,QAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,oBAAC,OAAD;AAAS,EAAA,KAAK,EAAC,OAAf;AAAuB,EAAA,QAAQ,MAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADF,CADF,EAME,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,oBAAC,OAAD;AAAS,EAAA,KAAK,EAAC,OAAf;AAAuB,EAAA,QAAQ,MAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADF,CANF,EAWE,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,oBAAC,OAAD;AAAS,EAAA,KAAK,EAAC,OAAf;AAAuB,EAAA,QAAQ,MAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADF,CAXF,CADF,CADF;;AAsBA,eAAeA,mBAAf","sourcesContent":["import React from 'react'\nimport { Grid, Segment } from 'semantic-ui-react'\n\nconst GridExampleInverted = () => (\n  <Grid columns='equal' divided inverted padded>\n    <Grid.Row color='black' textAlign='center'>\n      <Grid.Column>\n        <Segment color='black' inverted>\n          1\n        </Segment>\n      </Grid.Column>\n      <Grid.Column>\n        <Segment color='black' inverted>\n          2\n        </Segment>\n      </Grid.Column>\n      <Grid.Column>\n        <Segment color='black' inverted>\n          3\n        </Segment>\n      </Grid.Column>\n    </Grid.Row>\n  </Grid>\n)\n\nexport default GridExampleInverted\n"]},"metadata":{},"sourceType":"module"}